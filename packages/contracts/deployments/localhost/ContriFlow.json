{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AlreadyClaimed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "GithubIdNotSet",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidBotSigner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidPriceFeed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidVoucher",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotBotSigner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReentrancyGuardReentrantCall",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VoucherExists",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "ownerAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountWei",
          "type": "uint256"
        }
      ],
      "name": "DepositAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "ownerAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountWei",
          "type": "uint256"
        }
      ],
      "name": "DepositRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "ownerAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "repoGithubId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "contrubutorGithubId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ownerGithubId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "prNumber",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "contributor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountWei",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "dollarAmount8dec",
          "type": "uint256"
        }
      ],
      "name": "RewardClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "ownerAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "repoGithubId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "contributorGithubId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ownerGithubId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "prNumber",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "dollarAmount8dec",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "name": "VoucherStored",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "githubId",
          "type": "uint256"
        }
      ],
      "name": "addAmount",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "secret",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "ownerAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "ownerGithubId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "repoGithubId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "prNumber",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "contributorGithubId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dollarAmount8dec",
          "type": "uint256"
        }
      ],
      "name": "claimReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentSigner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "ownerAddress",
          "type": "address"
        }
      ],
      "name": "getOwnerDetails",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "githubId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct ContriFlow.RepoOwnerDetails",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "repoOwnerGithubId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "repoId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "prNumber",
          "type": "uint256"
        }
      ],
      "name": "getVoucherDetails",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "contributorGithubId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dollarAmount8dec",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "ethAmountInWei",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "claimed",
              "type": "bool"
            }
          ],
          "internalType": "struct ContriFlow.Voucher",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "ownerDetails",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "githubId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountWei",
          "type": "uint256"
        }
      ],
      "name": "removeAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newBot",
          "type": "address"
        }
      ],
      "name": "setBotSigner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "ownerAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "ownerGithubId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "repoGithubId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "contributorGithubId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "prNumber",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dollarAmount8dec",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "name": "storeVoucher",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "vouchersByRepoAndPr",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "contributorGithubId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dollarAmount8dec",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ethAmountInWei",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "claimed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x7d24b53477b1e51e21d11c030f5def59d566fb49bbd061dea0f7b4b5783d4abd",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1699224",
    "logsBloom": "0x
    "blockHash": "0xa34f63f076e004b7aeb93f397f116c80c78526af5aaf51b191f33d0dbe8b623d",
    "transactionHash": "0x7d24b53477b1e51e21d11c030f5def59d566fb49bbd061dea0f7b4b5783d4abd",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1699224",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "00e58dad78973c31c5d07d418a4524aa",
  "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyClaimed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GithubIdNotSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidBotSigner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPriceFeed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidVoucher\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotBotSigner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VoucherExists\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"ownerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountWei\",\"type\":\"uint256\"}],\"name\":\"DepositAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"ownerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountWei\",\"type\":\"uint256\"}],\"name\":\"DepositRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"ownerAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"repoGithubId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"contrubutorGithubId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ownerGithubId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"prNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountWei\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dollarAmount8dec\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"ownerAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"repoGithubId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"contributorGithubId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ownerGithubId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"prNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dollarAmount8dec\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"VoucherStored\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"githubId\",\"type\":\"uint256\"}],\"name\":\"addAmount\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"secret\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ownerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"ownerGithubId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"repoGithubId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"contributorGithubId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dollarAmount8dec\",\"type\":\"uint256\"}],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ownerAddress\",\"type\":\"address\"}],\"name\":\"getOwnerDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"githubId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ContriFlow.RepoOwnerDetails\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"repoOwnerGithubId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"repoId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prNumber\",\"type\":\"uint256\"}],\"name\":\"getVoucherDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"contributorGithubId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dollarAmount8dec\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ethAmountInWei\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"claimed\",\"type\":\"bool\"}],\"internalType\":\"struct ContriFlow.Voucher\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ownerDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"githubId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountWei\",\"type\":\"uint256\"}],\"name\":\"removeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newBot\",\"type\":\"address\"}],\"name\":\"setBotSigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ownerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"ownerGithubId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"repoGithubId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"contributorGithubId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dollarAmount8dec\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"storeVoucher\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"vouchersByRepoAndPr\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"contributorGithubId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dollarAmount8dec\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ethAmountInWei\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"claimed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addAmount(uint256)\":{\"notice\":\"Owner deposits ETH to the contract\"},\"removeAmount(uint256)\":{\"notice\":\"Owner withdraws unused ETH from a deposit\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ContriFlow.sol\":\"ContriFlow\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\\n * consider using {ReentrancyGuardTransient} instead.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\"},\"contracts/ContriFlow.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.28;\\n\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\ncontract ContriFlow is ReentrancyGuard {\\n    using PriceConverter for AggregatorV3Interface;\\n\\n    event DepositAdded(address indexed ownerAddress, uint256 amountWei);\\n    event DepositRemoved(address indexed ownerAddress, uint256 amountWei);\\n    event VoucherStored(\\n        address indexed ownerAddress,\\n        uint256 indexed repoGithubId,\\n        uint256 indexed contributorGithubId,\\n        uint256 ownerGithubId,\\n        uint256 prNumber,\\n        uint256 dollarAmount8dec,\\n        bytes32 hash\\n    );\\n\\n    event RewardClaimed(\\n        address indexed ownerAddress,\\n        uint256 indexed repoGithubId,\\n        uint256 indexed contrubutorGithubId,\\n        uint256 ownerGithubId,\\n        uint256 prNumber,\\n        address contributor,\\n        uint256 amountWei,\\n        uint256 dollarAmount8dec\\n    );\\n\\n    error NotOwner();\\n    error InvalidBotSigner();\\n    error InvalidPriceFeed();\\n    error InvalidVoucher();\\n    error VoucherExists();\\n    error AlreadyClaimed();\\n    error InsufficientBalance();\\n    error TransferFailed();\\n    error NotBotSigner();\\n    error GithubIdNotSet();\\n\\n    struct RepoOwnerDetails {\\n        uint256 githubId;\\n        uint256 amount;\\n    }\\n\\n    struct Voucher {\\n        bytes32 hash;\\n        uint256 contributorGithubId;\\n        uint256 dollarAmount8dec; // USD amount scaled to 8 decimals (e.g. $50 => 50 * 1e8)\\n        uint256 ethAmountInWei;\\n        bool claimed;\\n    }\\n\\n    mapping(address => RepoOwnerDetails) public ownerDetails;\\n\\n    address private bot;\\n    address immutable i_owner;\\n    AggregatorV3Interface public s_priceFeed;\\n\\n    modifier onlyBot() {\\n        require(msg.sender == bot, \\\"Not owner\\\");\\n        _;\\n    }\\n\\n    // mapping (uint256 repoOwnerGithubId => mapping (uint256 repoId => mapping(uint256 prNumber =>  Voucher)) vouchersByRepoAndPr;\\n    mapping(uint256 => mapping(uint256 => mapping(uint256 => Voucher)))\\n        public vouchersByRepoAndPr;\\n\\n    // repoOwnerGithubId -> repoId -> prNumber -> Voucher\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        if (priceFeedAddress == address(0)) revert InvalidPriceFeed();\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n        bot = msg.sender;\\n    }\\n\\n    function setBotSigner(address newBot) external onlyBot {\\n        bot = newBot;\\n    }\\n\\n    /// @notice Owner deposits ETH to the contract\\n    function addAmount(uint256 githubId) external payable {\\n        require(msg.value > 0, \\\"Must send ETH\\\");\\n        if (githubId == 0) revert GithubIdNotSet();\\n\\n        RepoOwnerDetails storage details = ownerDetails[msg.sender];\\n\\n        if (details.githubId == 0) {\\n            details.githubId = githubId;\\n        } else {\\n            require(details.githubId == githubId, \\\"GitHub ID mismatch\\\");\\n        }\\n\\n        details.amount += msg.value;\\n        emit DepositAdded(msg.sender, msg.value);\\n    }\\n\\n    /// @notice Owner withdraws unused ETH from a deposit\\n    function removeAmount(uint256 amountWei) external {\\n        uint256 bal = ownerDetails[msg.sender].amount;\\n        if (bal < amountWei) revert InsufficientBalance();\\n        ownerDetails[msg.sender].amount -= amountWei;\\n        (bool success, ) = payable(msg.sender).call{value: amountWei}(\\\"\\\");\\n        if (!success) revert TransferFailed();\\n        emit DepositRemoved(msg.sender, amountWei);\\n    }\\n\\n    function storeVoucher(\\n        address ownerAddress,\\n        uint256 ownerGithubId,\\n        uint256 repoGithubId,\\n        uint256 contributorGithubId,\\n        uint256 prNumber,\\n        uint256 dollarAmount8dec,\\n        bytes32 hash\\n    ) external onlyBot {\\n        // Check GitHub ID was set on-chain for ownerAddress\\n        uint256 recorded = ownerDetails[ownerAddress].githubId;\\n        if (recorded == 0 || recorded != ownerGithubId) revert GithubIdNotSet();\\n\\n        if (vouchersByRepoAndPr[ownerGithubId][repoGithubId][prNumber].hash != bytes32(0)) revert VoucherExists();\\n\\n                // Compute ETH amount via Chainlink\\n        uint256 ethAmt = PriceConverter.getEthAmountFromUsd(\\n            dollarAmount8dec,\\n            s_priceFeed\\n        );\\n        require(ethAmt > 0, \\\"Invalid ETH amount\\\");\\n\\n        // Store voucher\\n        vouchersByRepoAndPr[ownerGithubId][repoGithubId][prNumber] = Voucher({\\n            hash: hash,\\n            contributorGithubId: contributorGithubId,\\n            dollarAmount8dec: dollarAmount8dec,\\n            claimed: false,\\n            ethAmountInWei: ethAmt\\n        });\\n        emit VoucherStored(\\n            ownerAddress,\\n            repoGithubId,\\n            contributorGithubId,\\n            ownerGithubId,\\n            prNumber,\\n            dollarAmount8dec,\\n            hash\\n        );\\n    }\\n\\n    function claimReward(\\n        string calldata secret,\\n        address ownerAddress,\\n        uint256 ownerGithubId,\\n        uint256 repoGithubId,\\n        uint256 prNumber,\\n        uint256 contributorGithubId,\\n        uint256 dollarAmount8dec\\n    ) external nonReentrant {\\n        address contributor = msg.sender;\\n\\n        Voucher storage v = vouchersByRepoAndPr[ownerGithubId][repoGithubId][prNumber];\\n\\n        if(v.hash == bytes32(0)) { revert InvalidVoucher(); }\\n        \\n        // Recompute voucherId as was done off-chain\\n        bytes32 calculatedHash = keccak256(\\n            abi.encodePacked(\\n                secret,\\n                ownerAddress,\\n                ownerGithubId,\\n                repoGithubId,\\n                prNumber,\\n                contributorGithubId,\\n                dollarAmount8dec\\n            )\\n        );\\n\\n        if (\\n            v.hash != calculatedHash ||\\n            v.contributorGithubId != contributorGithubId ||\\n            v.dollarAmount8dec != dollarAmount8dec\\n        ) {\\n            revert InvalidVoucher();\\n        }\\n        if (v.claimed) revert AlreadyClaimed();\\n\\n        // Mark claimed\\n        v.claimed = true;\\n        uint256 ethAmt = v.ethAmountInWei;\\n\\n        // Deduct from owner's deposit for this repo\\n        uint256 bal = ownerDetails[ownerAddress].amount;\\n        if (bal < ethAmt) revert InsufficientBalance();\\n        ownerDetails[ownerAddress].amount = bal - ethAmt;\\n\\n        // Transfer ETH to contributor\\n        (bool sent, ) = payable(contributor).call{value: ethAmt}(\\\"\\\");\\n        if (!sent) revert TransferFailed();\\n\\n        emit RewardClaimed(\\n            ownerAddress,\\n            repoGithubId,\\n            contributorGithubId,\\n            ownerGithubId,\\n            prNumber,\\n            contributor,\\n            ethAmt,\\n            dollarAmount8dec\\n        );\\n    }\\n\\n    function getOwnerDetails(address ownerAddress) view external returns (RepoOwnerDetails memory) {\\n        return ownerDetails[ownerAddress];\\n    }\\n    \\n    function getVoucherDetails(uint256 repoOwnerGithubId, uint256 repoId, uint256 prNumber) external view  returns (Voucher memory) {\\n        return vouchersByRepoAndPr[repoOwnerGithubId][repoId][prNumber];\\n    }\\n\\n    function getCurrentSigner() external view returns (address) {\\n        return bot;\\n    } \\n\\n    fallback() external payable {}\\n\\n    receive() external payable {}\\n}\\n\",\"keccak256\":\"0x40556fcb2b800d872db8cdaedc3e8cbb915c5ffe6681cb1472c16b6822aefaa3\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n    function getPrice(AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n        // Chainlink returns price with 8 decimals, convert to 18 decimals (wei)\\r\\n        return uint256(answer) * 1e10;\\r\\n    }\\r\\n\\r\\n    /// @notice Converts USD amount (8 decimals) to ETH amount (in wei)\\r\\n    /// @param usdAmount The amount in USD (e.g., $50 = 50 * 1e8)\\r\\n    function getEthAmountFromUsd(\\r\\n        uint256 usdAmount,\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed); // ETH price in USD, 18 decimals\\r\\n        // USD has 8 decimals, so multiply by 1e18 to get wei, then divide by price\\r\\n        return (usdAmount * 1e18) / ethPrice;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x50eda61f790e9b7ec2babf261fd25826d7a74451a0f88436f4240bcdce86096d\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051611e94380380611e94833981810160405281019061003291906101bf565b60016000819055503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100d4576040517f52cc3f7d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506101ec565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061018c82610161565b9050919050565b61019c81610181565b81146101a757600080fd5b50565b6000815190506101b981610193565b92915050565b6000602082840312156101d5576101d461015c565b5b60006101e3848285016101aa565b91505092915050565b608051611c9061020460003960005050611c906000f3fe6080604052600436106100a05760003560e01c8063c3bb812111610064578063c3bb81211461017a578063d06721be146101b7578063e29acc26146101e2578063ec5a3f861461020b578063f24793471461024c578063faf7893c14610275576100a1565b80630637f719146100a35780630912f232146100e15780630ec3b027146100fd5780633388c8d414610128578063c06d289a14610151576100a1565b5b005b3480156100af57600080fd5b506100ca60048036038101906100c59190611103565b6102b2565b6040516100d8929190611149565b60405180910390f35b6100fb60048036038101906100f6919061119e565b6102d6565b005b34801561010957600080fd5b50610112610464565b60405161011f919061122a565b60405180910390f35b34801561013457600080fd5b5061014f600480360381019061014a9190611103565b61048a565b005b34801561015d57600080fd5b506101786004803603810190610173919061127b565b61055e565b005b34801561018657600080fd5b506101a1600480360381019061019c9190611103565b61086d565b6040516101ae919061135b565b60405180910390f35b3480156101c357600080fd5b506101cc6108da565b6040516101d99190611385565b60405180910390f35b3480156101ee57600080fd5b506102096004803603810190610204919061119e565b610904565b005b34801561021757600080fd5b50610232600480360381019061022d91906113a0565b610ad4565b60405161024395949392919061141d565b60405180910390f35b34801561025857600080fd5b50610273600480360381019061026e91906114d5565b610b31565b005b34801561028157600080fd5b5061029c600480360381019061029791906113a0565b610ea2565b6040516102a9919061161d565b60405180910390f35b60016020528060005260406000206000915090508060000154908060010154905082565b60003411610319576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031090611695565b60405180910390fd5b60008103610353576040517fd233f12300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160000154036103b0578181600001819055506103f7565b818160000154146103f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ed90611701565b60405180910390fd5b5b3481600101600082825461040b9190611750565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fa2a2db73af12c9f5bef6303364d44e78f97e992c353cd8659f3474c471427e9b346040516104589190611784565b60405180910390a25050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461051a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610511906117eb565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e5906117eb565b60405180910390fd5b6000600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905060008114806106445750868114155b1561067b576040517fd233f12300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000801b600460008981526020019081526020016000206000888152602001908152602001600020600086815260200190815260200160002060000154146106ef576040517f7f8ba39200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061071d84600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610f36565b905060008111610762576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075990611857565b60405180910390fd5b6040518060a0016040528084815260200187815260200185815260200182815260200160001515815250600460008a8152602001908152602001600020600089815260200190815260200160002060008781526020019081526020016000206000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff02191690831515021790555090505085878a73ffffffffffffffffffffffffffffffffffffffff167f2a9afc8fb4d9832e0595129a11126a05b1e16aee924c5164e33f336b416af8168b89898960405161085a9493929190611877565b60405180910390a4505050505050505050565b61087561104d565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806040016040529081600082015481526020016001820154815250509050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905081811015610985576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282546109d791906118bc565b9250508190555060003373ffffffffffffffffffffffffffffffffffffffff1683604051610a0490611921565b60006040518083038185875af1925050503d8060008114610a41576040519150601f19603f3d011682016040523d82523d6000602084013e610a46565b606091505b5050905080610a81576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f6c0508a15c6004f004874bb9cc4a2a9d2d8091a86101a97e1662e7eb1413549884604051610ac79190611784565b60405180910390a2505050565b600460205282600052604060002060205281600052604060002060205280600052604060002060009250925050508060000154908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b610b39610f6c565b60003390506000600460008881526020019081526020016000206000878152602001908152602001600020600086815260200190815260200160002090506000801b816000015403610bb7576040517f6d67dbd600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008a8a8a8a8a8a8a8a604051602001610bd89897969594939291906119de565b604051602081830303815290604052805190602001209050808260000154141580610c07575084826001015414155b80610c16575083826002015414155b15610c4d576040517f6d67dbd600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8160040160009054906101000a900460ff1615610c96576040517f646cf55800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018260040160006101000a81548160ff0219169083151502179055506000826003015490506000600160008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905081811015610d3d576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8181610d4991906118bc565b600160008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555060008573ffffffffffffffffffffffffffffffffffffffff1683604051610db590611921565b60006040518083038185875af1925050503d8060008114610df2576040519150601f19603f3d011682016040523d82523d6000602084013e610df7565b606091505b5050905080610e32576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b878a8d73ffffffffffffffffffffffffffffffffffffffff167ff5a76827f7992196339361c8c5b9c9de97a15d21806682a5f1d5a89c62b6a5e48e8d8b898e604051610e82959493929190611a5d565b60405180910390a4505050505050610e98610fb2565b5050505050505050565b610eaa611067565b60046000858152602001908152602001600020600084815260200190815260200160002060008381526020019081526020016000206040518060a0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff16151515158152505090509392505050565b600080610f4283610fbc565b905080670de0b6b3a764000085610f599190611ab0565b610f639190611b21565b91505092915050565b600260005403610fa8576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600081905550565b6001600081905550565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561100a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102e9190611bdf565b5050509150506402540be400816110459190611ab0565b915050919050565b604051806040016040528060008152602001600081525090565b6040518060a00160405280600080191681526020016000815260200160008152602001600081526020016000151581525090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110d0826110a5565b9050919050565b6110e0816110c5565b81146110eb57600080fd5b50565b6000813590506110fd816110d7565b92915050565b6000602082840312156111195761111861109b565b5b6000611127848285016110ee565b91505092915050565b6000819050919050565b61114381611130565b82525050565b600060408201905061115e600083018561113a565b61116b602083018461113a565b9392505050565b61117b81611130565b811461118657600080fd5b50565b60008135905061119881611172565b92915050565b6000602082840312156111b4576111b361109b565b5b60006111c284828501611189565b91505092915050565b6000819050919050565b60006111f06111eb6111e6846110a5565b6111cb565b6110a5565b9050919050565b6000611202826111d5565b9050919050565b6000611214826111f7565b9050919050565b61122481611209565b82525050565b600060208201905061123f600083018461121b565b92915050565b6000819050919050565b61125881611245565b811461126357600080fd5b50565b6000813590506112758161124f565b92915050565b600080600080600080600060e0888a03121561129a5761129961109b565b5b60006112a88a828b016110ee565b97505060206112b98a828b01611189565b96505060406112ca8a828b01611189565b95505060606112db8a828b01611189565b94505060806112ec8a828b01611189565b93505060a06112fd8a828b01611189565b92505060c061130e8a828b01611266565b91505092959891949750929550565b61132681611130565b82525050565b604082016000820151611342600085018261131d565b506020820151611355602085018261131d565b50505050565b6000604082019050611370600083018461132c565b92915050565b61137f816110c5565b82525050565b600060208201905061139a6000830184611376565b92915050565b6000806000606084860312156113b9576113b861109b565b5b60006113c786828701611189565b93505060206113d886828701611189565b92505060406113e986828701611189565b9150509250925092565b6113fc81611245565b82525050565b60008115159050919050565b61141781611402565b82525050565b600060a08201905061143260008301886113f3565b61143f602083018761113a565b61144c604083018661113a565b611459606083018561113a565b611466608083018461140e565b9695505050505050565b600080fd5b600080fd5b600080fd5b60008083601f84011261149557611494611470565b5b8235905067ffffffffffffffff8111156114b2576114b1611475565b5b6020830191508360018202830111156114ce576114cd61147a565b5b9250929050565b60008060008060008060008060e0898b0312156114f5576114f461109b565b5b600089013567ffffffffffffffff811115611513576115126110a0565b5b61151f8b828c0161147f565b985098505060206115328b828c016110ee565b96505060406115438b828c01611189565b95505060606115548b828c01611189565b94505060806115658b828c01611189565b93505060a06115768b828c01611189565b92505060c06115878b828c01611189565b9150509295985092959890939650565b6115a081611245565b82525050565b6115af81611402565b82525050565b60a0820160008201516115cb6000850182611597565b5060208201516115de602085018261131d565b5060408201516115f1604085018261131d565b506060820151611604606085018261131d565b50608082015161161760808501826115a6565b50505050565b600060a08201905061163260008301846115b5565b92915050565b600082825260208201905092915050565b7f4d7573742073656e642045544800000000000000000000000000000000000000600082015250565b600061167f600d83611638565b915061168a82611649565b602082019050919050565b600060208201905081810360008301526116ae81611672565b9050919050565b7f476974487562204944206d69736d617463680000000000000000000000000000600082015250565b60006116eb601283611638565b91506116f6826116b5565b602082019050919050565b6000602082019050818103600083015261171a816116de565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061175b82611130565b915061176683611130565b925082820190508082111561177e5761177d611721565b5b92915050565b6000602082019050611799600083018461113a565b92915050565b7f4e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b60006117d5600983611638565b91506117e08261179f565b602082019050919050565b60006020820190508181036000830152611804816117c8565b9050919050565b7f496e76616c69642045544820616d6f756e740000000000000000000000000000600082015250565b6000611841601283611638565b915061184c8261180b565b602082019050919050565b6000602082019050818103600083015261187081611834565b9050919050565b600060808201905061188c600083018761113a565b611899602083018661113a565b6118a6604083018561113a565b6118b360608301846113f3565b95945050505050565b60006118c782611130565b91506118d283611130565b92508282039050818111156118ea576118e9611721565b5b92915050565b600081905092915050565b50565b600061190b6000836118f0565b9150611916826118fb565b600082019050919050565b600061192c826118fe565b9150819050919050565b600081905092915050565b82818337600083830152505050565b600061195c8385611936565b9350611969838584611941565b82840190509392505050565b60008160601b9050919050565b600061198d82611975565b9050919050565b600061199f82611982565b9050919050565b6119b76119b2826110c5565b611994565b82525050565b6000819050919050565b6119d86119d382611130565b6119bd565b82525050565b60006119eb828a8c611950565b91506119f782896119a6565b601482019150611a0782886119c7565b602082019150611a1782876119c7565b602082019150611a2782866119c7565b602082019150611a3782856119c7565b602082019150611a4782846119c7565b6020820191508190509998505050505050505050565b600060a082019050611a72600083018861113a565b611a7f602083018761113a565b611a8c6040830186611376565b611a99606083018561113a565b611aa6608083018461113a565b9695505050505050565b6000611abb82611130565b9150611ac683611130565b9250828202611ad481611130565b91508282048414831517611aeb57611aea611721565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611b2c82611130565b9150611b3783611130565b925082611b4757611b46611af2565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b611b7181611b52565b8114611b7c57600080fd5b50565b600081519050611b8e81611b68565b92915050565b6000819050919050565b611ba781611b94565b8114611bb257600080fd5b50565b600081519050611bc481611b9e565b92915050565b600081519050611bd981611172565b92915050565b600080600080600060a08688031215611bfb57611bfa61109b565b5b6000611c0988828901611b7f565b9550506020611c1a88828901611bb5565b9450506040611c2b88828901611bca565b9350506060611c3c88828901611bca565b9250506080611c4d88828901611b7f565b915050929550929590935056fea2646970667358221220219b542aaeebf4ec48d9ab784d350b4bf8c11fdc37aafc1e89202353cf2e31b364736f6c634300081c0033",
  "deployedBytecode": "0x6080604052600436106100a05760003560e01c8063c3bb812111610064578063c3bb81211461017a578063d06721be146101b7578063e29acc26146101e2578063ec5a3f861461020b578063f24793471461024c578063faf7893c14610275576100a1565b80630637f719146100a35780630912f232146100e15780630ec3b027146100fd5780633388c8d414610128578063c06d289a14610151576100a1565b5b005b3480156100af57600080fd5b506100ca60048036038101906100c59190611103565b6102b2565b6040516100d8929190611149565b60405180910390f35b6100fb60048036038101906100f6919061119e565b6102d6565b005b34801561010957600080fd5b50610112610464565b60405161011f919061122a565b60405180910390f35b34801561013457600080fd5b5061014f600480360381019061014a9190611103565b61048a565b005b34801561015d57600080fd5b506101786004803603810190610173919061127b565b61055e565b005b34801561018657600080fd5b506101a1600480360381019061019c9190611103565b61086d565b6040516101ae919061135b565b60405180910390f35b3480156101c357600080fd5b506101cc6108da565b6040516101d99190611385565b60405180910390f35b3480156101ee57600080fd5b506102096004803603810190610204919061119e565b610904565b005b34801561021757600080fd5b50610232600480360381019061022d91906113a0565b610ad4565b60405161024395949392919061141d565b60405180910390f35b34801561025857600080fd5b50610273600480360381019061026e91906114d5565b610b31565b005b34801561028157600080fd5b5061029c600480360381019061029791906113a0565b610ea2565b6040516102a9919061161d565b60405180910390f35b60016020528060005260406000206000915090508060000154908060010154905082565b60003411610319576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031090611695565b60405180910390fd5b60008103610353576040517fd233f12300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160000154036103b0578181600001819055506103f7565b818160000154146103f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ed90611701565b60405180910390fd5b5b3481600101600082825461040b9190611750565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fa2a2db73af12c9f5bef6303364d44e78f97e992c353cd8659f3474c471427e9b346040516104589190611784565b60405180910390a25050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461051a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610511906117eb565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e5906117eb565b60405180910390fd5b6000600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905060008114806106445750868114155b1561067b576040517fd233f12300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000801b600460008981526020019081526020016000206000888152602001908152602001600020600086815260200190815260200160002060000154146106ef576040517f7f8ba39200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061071d84600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610f36565b905060008111610762576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075990611857565b60405180910390fd5b6040518060a0016040528084815260200187815260200185815260200182815260200160001515815250600460008a8152602001908152602001600020600089815260200190815260200160002060008781526020019081526020016000206000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff02191690831515021790555090505085878a73ffffffffffffffffffffffffffffffffffffffff167f2a9afc8fb4d9832e0595129a11126a05b1e16aee924c5164e33f336b416af8168b89898960405161085a9493929190611877565b60405180910390a4505050505050505050565b61087561104d565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806040016040529081600082015481526020016001820154815250509050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905081811015610985576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282546109d791906118bc565b9250508190555060003373ffffffffffffffffffffffffffffffffffffffff1683604051610a0490611921565b60006040518083038185875af1925050503d8060008114610a41576040519150601f19603f3d011682016040523d82523d6000602084013e610a46565b606091505b5050905080610a81576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f6c0508a15c6004f004874bb9cc4a2a9d2d8091a86101a97e1662e7eb1413549884604051610ac79190611784565b60405180910390a2505050565b600460205282600052604060002060205281600052604060002060205280600052604060002060009250925050508060000154908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b610b39610f6c565b60003390506000600460008881526020019081526020016000206000878152602001908152602001600020600086815260200190815260200160002090506000801b816000015403610bb7576040517f6d67dbd600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008a8a8a8a8a8a8a8a604051602001610bd89897969594939291906119de565b604051602081830303815290604052805190602001209050808260000154141580610c07575084826001015414155b80610c16575083826002015414155b15610c4d576040517f6d67dbd600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8160040160009054906101000a900460ff1615610c96576040517f646cf55800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018260040160006101000a81548160ff0219169083151502179055506000826003015490506000600160008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905081811015610d3d576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8181610d4991906118bc565b600160008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555060008573ffffffffffffffffffffffffffffffffffffffff1683604051610db590611921565b60006040518083038185875af1925050503d8060008114610df2576040519150601f19603f3d011682016040523d82523d6000602084013e610df7565b606091505b5050905080610e32576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b878a8d73ffffffffffffffffffffffffffffffffffffffff167ff5a76827f7992196339361c8c5b9c9de97a15d21806682a5f1d5a89c62b6a5e48e8d8b898e604051610e82959493929190611a5d565b60405180910390a4505050505050610e98610fb2565b5050505050505050565b610eaa611067565b60046000858152602001908152602001600020600084815260200190815260200160002060008381526020019081526020016000206040518060a0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff16151515158152505090509392505050565b600080610f4283610fbc565b905080670de0b6b3a764000085610f599190611ab0565b610f639190611b21565b91505092915050565b600260005403610fa8576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600081905550565b6001600081905550565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561100a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102e9190611bdf565b5050509150506402540be400816110459190611ab0565b915050919050565b604051806040016040528060008152602001600081525090565b6040518060a00160405280600080191681526020016000815260200160008152602001600081526020016000151581525090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110d0826110a5565b9050919050565b6110e0816110c5565b81146110eb57600080fd5b50565b6000813590506110fd816110d7565b92915050565b6000602082840312156111195761111861109b565b5b6000611127848285016110ee565b91505092915050565b6000819050919050565b61114381611130565b82525050565b600060408201905061115e600083018561113a565b61116b602083018461113a565b9392505050565b61117b81611130565b811461118657600080fd5b50565b60008135905061119881611172565b92915050565b6000602082840312156111b4576111b361109b565b5b60006111c284828501611189565b91505092915050565b6000819050919050565b60006111f06111eb6111e6846110a5565b6111cb565b6110a5565b9050919050565b6000611202826111d5565b9050919050565b6000611214826111f7565b9050919050565b61122481611209565b82525050565b600060208201905061123f600083018461121b565b92915050565b6000819050919050565b61125881611245565b811461126357600080fd5b50565b6000813590506112758161124f565b92915050565b600080600080600080600060e0888a03121561129a5761129961109b565b5b60006112a88a828b016110ee565b97505060206112b98a828b01611189565b96505060406112ca8a828b01611189565b95505060606112db8a828b01611189565b94505060806112ec8a828b01611189565b93505060a06112fd8a828b01611189565b92505060c061130e8a828b01611266565b91505092959891949750929550565b61132681611130565b82525050565b604082016000820151611342600085018261131d565b506020820151611355602085018261131d565b50505050565b6000604082019050611370600083018461132c565b92915050565b61137f816110c5565b82525050565b600060208201905061139a6000830184611376565b92915050565b6000806000606084860312156113b9576113b861109b565b5b60006113c786828701611189565b93505060206113d886828701611189565b92505060406113e986828701611189565b9150509250925092565b6113fc81611245565b82525050565b60008115159050919050565b61141781611402565b82525050565b600060a08201905061143260008301886113f3565b61143f602083018761113a565b61144c604083018661113a565b611459606083018561113a565b611466608083018461140e565b9695505050505050565b600080fd5b600080fd5b600080fd5b60008083601f84011261149557611494611470565b5b8235905067ffffffffffffffff8111156114b2576114b1611475565b5b6020830191508360018202830111156114ce576114cd61147a565b5b9250929050565b60008060008060008060008060e0898b0312156114f5576114f461109b565b5b600089013567ffffffffffffffff811115611513576115126110a0565b5b61151f8b828c0161147f565b985098505060206115328b828c016110ee565b96505060406115438b828c01611189565b95505060606115548b828c01611189565b94505060806115658b828c01611189565b93505060a06115768b828c01611189565b92505060c06115878b828c01611189565b9150509295985092959890939650565b6115a081611245565b82525050565b6115af81611402565b82525050565b60a0820160008201516115cb6000850182611597565b5060208201516115de602085018261131d565b5060408201516115f1604085018261131d565b506060820151611604606085018261131d565b50608082015161161760808501826115a6565b50505050565b600060a08201905061163260008301846115b5565b92915050565b600082825260208201905092915050565b7f4d7573742073656e642045544800000000000000000000000000000000000000600082015250565b600061167f600d83611638565b915061168a82611649565b602082019050919050565b600060208201905081810360008301526116ae81611672565b9050919050565b7f476974487562204944206d69736d617463680000000000000000000000000000600082015250565b60006116eb601283611638565b91506116f6826116b5565b602082019050919050565b6000602082019050818103600083015261171a816116de565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061175b82611130565b915061176683611130565b925082820190508082111561177e5761177d611721565b5b92915050565b6000602082019050611799600083018461113a565b92915050565b7f4e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b60006117d5600983611638565b91506117e08261179f565b602082019050919050565b60006020820190508181036000830152611804816117c8565b9050919050565b7f496e76616c69642045544820616d6f756e740000000000000000000000000000600082015250565b6000611841601283611638565b915061184c8261180b565b602082019050919050565b6000602082019050818103600083015261187081611834565b9050919050565b600060808201905061188c600083018761113a565b611899602083018661113a565b6118a6604083018561113a565b6118b360608301846113f3565b95945050505050565b60006118c782611130565b91506118d283611130565b92508282039050818111156118ea576118e9611721565b5b92915050565b600081905092915050565b50565b600061190b6000836118f0565b9150611916826118fb565b600082019050919050565b600061192c826118fe565b9150819050919050565b600081905092915050565b82818337600083830152505050565b600061195c8385611936565b9350611969838584611941565b82840190509392505050565b60008160601b9050919050565b600061198d82611975565b9050919050565b600061199f82611982565b9050919050565b6119b76119b2826110c5565b611994565b82525050565b6000819050919050565b6119d86119d382611130565b6119bd565b82525050565b60006119eb828a8c611950565b91506119f782896119a6565b601482019150611a0782886119c7565b602082019150611a1782876119c7565b602082019150611a2782866119c7565b602082019150611a3782856119c7565b602082019150611a4782846119c7565b6020820191508190509998505050505050505050565b600060a082019050611a72600083018861113a565b611a7f602083018761113a565b611a8c6040830186611376565b611a99606083018561113a565b611aa6608083018461113a565b9695505050505050565b6000611abb82611130565b9150611ac683611130565b9250828202611ad481611130565b91508282048414831517611aeb57611aea611721565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611b2c82611130565b9150611b3783611130565b925082611b4757611b46611af2565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b611b7181611b52565b8114611b7c57600080fd5b50565b600081519050611b8e81611b68565b92915050565b6000819050919050565b611ba781611b94565b8114611bb257600080fd5b50565b600081519050611bc481611b9e565b92915050565b600081519050611bd981611172565b92915050565b600080600080600060a08688031215611bfb57611bfa61109b565b5b6000611c0988828901611b7f565b9550506020611c1a88828901611bb5565b9450506040611c2b88828901611bca565b9350506060611c3c88828901611bca565b9250506080611c4d88828901611b7f565b915050929550929590935056fea2646970667358221220219b542aaeebf4ec48d9ab784d350b4bf8c11fdc37aafc1e89202353cf2e31b364736f6c634300081c0033",
  "devdoc": {
    "errors": {
      "ReentrancyGuardReentrantCall()": [
        {
          "details": "Unauthorized reentrant call."
        }
      ]
    },
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addAmount(uint256)": {
        "notice": "Owner deposits ETH to the contract"
      },
      "removeAmount(uint256)": {
        "notice": "Owner withdraws unused ETH from a deposit"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 56,
        "contract": "contracts/ContriFlow.sol:ContriFlow",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 211,
        "contract": "contracts/ContriFlow.sol:ContriFlow",
        "label": "ownerDetails",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_struct(RepoOwnerDetails)195_storage)"
      },
      {
        "astId": 213,
        "contract": "contracts/ContriFlow.sol:ContriFlow",
        "label": "bot",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 218,
        "contract": "contracts/ContriFlow.sol:ContriFlow",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 239,
        "contract": "contracts/ContriFlow.sol:ContriFlow",
        "label": "vouchersByRepoAndPr",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Voucher)206_storage)))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(RepoOwnerDetails)195_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct ContriFlow.RepoOwnerDetails)",
        "numberOfBytes": "32",
        "value": "t_struct(RepoOwnerDetails)195_storage"
      },
      "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Voucher)206_storage)))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => struct ContriFlow.Voucher)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Voucher)206_storage))"
      },
      "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Voucher)206_storage))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(uint256 => struct ContriFlow.Voucher))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(Voucher)206_storage)"
      },
      "t_mapping(t_uint256,t_struct(Voucher)206_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct ContriFlow.Voucher)",
        "numberOfBytes": "32",
        "value": "t_struct(Voucher)206_storage"
      },
      "t_struct(RepoOwnerDetails)195_storage": {
        "encoding": "inplace",
        "label": "struct ContriFlow.RepoOwnerDetails",
        "members": [
          {
            "astId": 192,
            "contract": "contracts/ContriFlow.sol:ContriFlow",
            "label": "githubId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 194,
            "contract": "contracts/ContriFlow.sol:ContriFlow",
            "label": "amount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Voucher)206_storage": {
        "encoding": "inplace",
        "label": "struct ContriFlow.Voucher",
        "members": [
          {
            "astId": 197,
            "contract": "contracts/ContriFlow.sol:ContriFlow",
            "label": "hash",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32"
          },
          {
            "astId": 199,
            "contract": "contracts/ContriFlow.sol:ContriFlow",
            "label": "contributorGithubId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 201,
            "contract": "contracts/ContriFlow.sol:ContriFlow",
            "label": "dollarAmount8dec",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 203,
            "contract": "contracts/ContriFlow.sol:ContriFlow",
            "label": "ethAmountInWei",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 205,
            "contract": "contracts/ContriFlow.sol:ContriFlow",
            "label": "claimed",
            "offset": 0,
            "slot": "4",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}